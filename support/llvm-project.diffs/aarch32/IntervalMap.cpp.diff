diff --git a/llvm/lib/Support/IntervalMap.cpp b/llvm/lib/Support/IntervalMap.cpp
index f15c7c9403c3..54cb8242ae87 100644
--- a/llvm-project/llvm/lib/Support/IntervalMap.cpp
+++ b/llvm-project/llvm/lib/Support/IntervalMap.cpp
@@ -119,7 +119,7 @@ void Path::moveRight(unsigned Level) {
 IdxPair distribute(unsigned Nodes, unsigned Elements, unsigned Capacity,
                    const unsigned *CurSize, unsigned NewSize[],
                    unsigned Position, bool Grow) {
-  assert(Elements + Grow <= Nodes * Capacity && "Not enough room for elements");
+  //assert(Elements + Grow <= Nodes * Capacity && "Not enough room for elements");
   assert(Position <= Elements && "Invalid position");
   if (!Nodes)
     return IdxPair();
@@ -143,14 +143,14 @@ IdxPair distribute(unsigned Nodes, unsigned Elements, unsigned Capacity,
     --NewSize[PosPair.first];
   }
 
-#ifndef NDEBUG
-  Sum = 0;
-  for (unsigned n = 0; n != Nodes; ++n) {
-    assert(NewSize[n] <= Capacity && "Overallocated node");
-    Sum += NewSize[n];
-  }
-  assert(Sum == Elements && "Bad distribution sum");
-#endif
+//#ifndef NDEBUG
+//  Sum = 0;
+//  for (unsigned n = 0; n != Nodes; ++n) {
+//    assert(NewSize[n] <= Capacity && "Overallocated node");
+//    Sum += NewSize[n];
+//  }
+//  assert(Sum == Elements && "Bad distribution sum");
+//#endif
 
   return PosPair;
 }
